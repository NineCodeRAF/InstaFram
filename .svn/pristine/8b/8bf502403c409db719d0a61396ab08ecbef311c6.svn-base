package view.panels;

import java.awt.BorderLayout;
import java.awt.Checkbox;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;

import model.myTree.ModulNode;
import model.myTree.MyTreeNode;
import model.myTree.ParametarNode;
import view.MainFrame;


public class InstallFirstPanel extends JFrame{
	private JTextArea taTermsText = new JTextArea();
	private JLabel lbTerms = new JLabel("Do you accept Terms of use?");
	private JButton btnNext = new JButton("Next");
	private JScrollPane scrollPane = new JScrollPane(taTermsText);
	private String logoPath = "";
	private ModulNode modul;
	private JCheckBox cbAccept = new JCheckBox("I accept");
	private JCheckBox cbDntAccept = new JCheckBox("I don't accept");
	private InstallSecondPanel secondPanel;
			
	public InstallFirstPanel(ModulNode modul) {
		this.modul = modul;
		init();
		addActions();
		setText();
		setLogo(logoPath);
	}
	
	public void changeContentPane(JPanel panel){
		this.setContentPane(panel);
		SwingUtilities.updateComponentTreeUI(this);
	}
	
	private void setText() {
		taTermsText.setText("");
		for(MyTreeNode node : modul.getChildren()) {
			if(node instanceof ParametarNode) {
				ParametarNode parameter = (ParametarNode) node;
				if(parameter.getType().equals("Custom")) {
					taTermsText.setText(parameter.getTerms());
				}
				else if(parameter.getType().equals("Terms of use")) {
					taTermsText.setText(parameter.getTerms());
				}
				else if(parameter.getType().equals("Logo")) {
					logoPath = parameter.getLogo();
				}
			}
		}
	}
	
	private void setLogo(String path) {
		if(!path.isEmpty()) {
			try {
				setIconImage(ImageIO.read(new File(path)));
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}
	}

	private void init() {
		taTermsText.setEditable(false);
		JPanel bottomPanel = new JPanel();
		JPanel centralPanel = new JPanel();
		bottomPanel.setLayout(new GridLayout(3, 1));
		JPanel bottomPanel2 = new JPanel();
		BorderLayout borderLayout = new BorderLayout(10,10);
		FlowLayout flowLayout = new FlowLayout(FlowLayout.RIGHT,10,10);
		FlowLayout fileFlowLayout = new FlowLayout(FlowLayout.CENTER,10,10);
		
		scrollPane.setPreferredSize(new Dimension(200,300));
		
		centralPanel.setLayout(fileFlowLayout);
		bottomPanel2.setLayout(flowLayout);
		setLayout(borderLayout);
		
		btnNext.setEnabled(false);
		
		centralPanel.add(lbTerms); 
		centralPanel.add(scrollPane);
		
		bottomPanel.add(cbAccept);
		bottomPanel.add(cbDntAccept);
		bottomPanel2.add(btnNext);
		bottomPanel.add(bottomPanel2);
		add(centralPanel,BorderLayout.CENTER);
		add(bottomPanel,BorderLayout.SOUTH);
		
		
		setSize(new Dimension(350, 400));
		setLocationRelativeTo(null);
		setVisible(true);
	}

	private void addActions() {
		btnNext.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if(cbAccept.isSelected())
				{
					secondPanel = new InstallSecondPanel(modul);
					changeContentPane(secondPanel);
				}
			}
		});
		cbAccept.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if(cbAccept.isSelected())
					btnNext.setEnabled(true);
				else
					btnNext.setEnabled(false);
			}
		});
	}
}
