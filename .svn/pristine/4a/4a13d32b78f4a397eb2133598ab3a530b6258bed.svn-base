package view.panels;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Enumeration;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import actions.ActionManager;
import model.myTree.MyTreeNode;
import model.myTree.ParametarNode;
import model.myTree.ProjekatNode;
import view.MainFrame;
import view.Tree;

public class ProjectPanel extends JPanel{
	private JButton btnChoose;
	private JTextField tfChoose;
	private JButton btnExport;
	private JButton btnInstall;
	private ProjekatNode node;
	
	public ProjectPanel() {
		// TODO Auto-generated constructor stub
		func();
	}
	
	public void func()
	{
		btnChoose = new JButton("Choose");
		tfChoose = new JTextField();
		btnExport = new JButton("Export");
		btnInstall = new JButton("Install");
		JPanel bottomPanel = new JPanel();
		JPanel centralPanel = new JPanel();
		
		BorderLayout borderLayout = new BorderLayout(10,10);
		FlowLayout bottomFlowLayout = new FlowLayout(FlowLayout.CENTER,10,10);
		FlowLayout centarFlowLayout = new FlowLayout(FlowLayout.CENTER,10,10);
		
		btnExport.setPreferredSize(new Dimension(170,30));
		btnInstall.setPreferredSize(new Dimension(170,30));
		btnChoose.setPreferredSize(new Dimension(170,30));
		tfChoose.setPreferredSize(new Dimension(200, 30));
		
		centralPanel.setLayout(centarFlowLayout);
		bottomPanel.setLayout(bottomFlowLayout);
		
		setLayout(borderLayout);
		
		centralPanel.add(tfChoose); 
		centralPanel.add(btnChoose);
		
		bottomPanel.add(btnExport);
		bottomPanel.add(btnInstall);
		
		this.add(bottomPanel, BorderLayout.CENTER);
		this.add(centralPanel,BorderLayout.NORTH);
		addActions();
	}
	
	
	public void addActions()
	{
		
		btnInstall.addActionListener(ActionManager.getInstance().getInstallAction());
		btnChoose.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				JFileChooser chooser = new JFileChooser();
				chooser.setFileSelectionMode(JFileChooser.APPROVE_OPTION);
				chooser.showOpenDialog(MainFrame.getInstance());
				
				File file = chooser.getSelectedFile();
				if(file != null) {
					tfChoose.setText(file.getPath());
					node.setPath(tfChoose.getText());
				} else {
					tfChoose.setText("");
					node.setPath("");
				}
			}
		});
		
		btnExport.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					Tree tree = MainFrame.getInstance().getSplitPanel().getTree();
					MyTreeNode root = (MyTreeNode) tree.getModel().getRoot();
					ProjekatNode projekat = null;

					ProjectPanel projectPanel = (ProjectPanel) MainFrame.getInstance().getSplitPanel().getTab().getSelectedComponent();
					String fileName = projectPanel.getNode().toString();
					FileOutputStream fileOut = new FileOutputStream("resources/" + fileName + ".rafraf");
					ObjectOutputStream out = new ObjectOutputStream(fileOut);
					
					Enumeration<MyTreeNode> en = root.preorderEnumeration();
					while (en.hasMoreElements()) {
						MyTreeNode node = en.nextElement();
						if(node.toString().equals(fileName)) {
							projekat = (ProjekatNode) node;
							break;
						}
					}
					
					out.writeObject(projekat);
					ActionManager.getInstance().getMessages().export();
					out.close();
			        fileOut.close();
				} catch (Exception err) {
					err.printStackTrace();
				}
				
			}
		});
	}
	public JTextField getTfChoose() {
		return tfChoose;
	}
	
	public void setNode(ProjekatNode node) {
		this.node = node;
	}
	
	public ProjekatNode getNode() {
		return node;
	}
}
