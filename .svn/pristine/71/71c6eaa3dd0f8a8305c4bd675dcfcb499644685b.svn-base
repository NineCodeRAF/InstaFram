package model;

import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.util.ArrayList;

public class MyTransferable implements Transferable{
	
	private ArrayList<DataFlavor> flavors;
	private Object object;
	
	public MyTransferable(Object obj) {
		object = obj;
		flavors = new ArrayList<>();
		flavors.add(new DataFlavor(obj.getClass(), "Content"));
	}
	
	@Override
	public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
		if (flavors.contains(flavor))
			return (object);
		else
			throw new UnsupportedFlavorException(flavor);
	}

	@Override
	public DataFlavor[] getTransferDataFlavors() {
		return (DataFlavor[]) flavors.toArray();
	}

	@Override
	public boolean isDataFlavorSupported(DataFlavor flavor) {
		return flavors.contains(flavor);
	}

	public Object getDiagramElements() {
		return object;
	}
}
