package actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;

import javax.swing.KeyStroke;
import javax.swing.tree.TreePath;

import model.MyTransferable;
import model.myTree.MyTreeNode;
import model.myTree.ParametarNode;
import view.MainFrame;
import view.Tree;

public class CopyAction extends AbstractActions{
	
	public CopyAction() {
		putValue(ACCELERATOR_KEY,KeyStroke.getKeyStroke(
		        KeyEvent.VK_C, ActionEvent.CTRL_MASK));
		putValue(SMALL_ICON, loadIcon("images/copy.png"));
		putValue(NAME, "Copy");
		putValue(SHORT_DESCRIPTION, "Copy");	}

	@Override
	public void actionPerformed(ActionEvent e) {
		ArrayList<MyTreeNode> selectedNodes = new ArrayList<>();
		
		Tree tree = MainFrame.getInstance().getSplitPanel().getTree();
		ArrayList<TreePath> paths = new ArrayList<>(Arrays.asList(tree.getSelectionPaths()));
		
		for (TreePath treePath : paths) {
			MyTreeNode node = (MyTreeNode)treePath.getLastPathComponent();
			
			if(node instanceof ParametarNode)
				selectedNodes.add(node);
		}
		
		MyTransferable nodeSelection = new MyTransferable(selectedNodes);
		ActionManager.getInstance().getMyClipboard().setContents(nodeSelection, ActionManager.getInstance());
	}
		
}


